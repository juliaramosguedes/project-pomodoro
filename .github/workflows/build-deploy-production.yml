name: Build and Deploy Production
on:
  push:
    branches:
      - master

jobs:
  build-client:
    name: Client Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Install Client Dependencies
        run: npm --prefix ./client install ./client
      - name: Build
        run: npm --prefix ./client run build ./client
        env:
          REACT_APP_APIKEY: ${{ secrets.PRODUCTION_APIKEY }}
          REACT_APP_AUTHDOMAIN: ${{ secrets.PRODUCTION_AUTHDOMAIN }}
          REACT_APP_DATABASEURL: ${{ secrets.PRODUCTION_DATABASEURL }}
          REACT_APP_PROJECTID: ${{ secrets.PRODUCTION_PROJECTID }}
          REACT_APP_STORAGEBUCKET: ${{ secrets.PRODUCTION_STORAGEBUCKET }}
          REACT_APP_MESSAGINGSENDERID: ${{ secrets.PRODUCTION_MESSAGINGSENDERID }}
          REACT_APP_APPID: ${{ secrets.PRODUCTION_APPID }}
          REACT_APP_MEASUREMENTID: ${{ secrets.PRODUCTION_MEASUREMENTID }}
      - name: Archive Production Client Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: client/build
  # deploy-functions:
  #   name: Functions Deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@master
  #     - name: Install Functions Dependencies
  #       run: npm --prefix ./functions install ./functions
  #     - name: Deploy to Firebase
  #       uses: w9jds/firebase-action@master
  #       with:
  #         args: deploy --only functions
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #         PROJECT_ID: pomodoro-production
  deploy-client:
    name: Deploy
    needs: build-client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Client Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: client/build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: tictaskapp
